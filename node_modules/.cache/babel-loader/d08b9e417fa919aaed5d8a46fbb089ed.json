{"ast":null,"code":"import _objectSpread from \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/atm-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/atm-app/src/containers/App.jsx\";\nimport React, { Component } from 'react';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount: '',\n      class: false,\n      requiredNotes: {\n        2000: 0,\n        500: 0,\n        200: 0,\n        100: 0,\n        50: 0,\n        20: 0,\n        10: 0,\n        5: 0,\n        2: 0,\n        1: 0\n      },\n      notes: [2000, 500, 200, 100, 50, 20, 10, 5, 2, 1]\n    };\n\n    this.handleChange = e => {\n      var regexp1 = new RegExp(\"[^0-9]\");\n\n      if (regexp1.test(e.target.value)) {\n        this.setState({\n          class: true\n        });\n        return false;\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      }, () => {\n        this.calNotes();\n      });\n    };\n\n    this.calNotes = () => {\n      let amount = this.state.amount;\n      const notes = this.state.notes;\n      let requiredNotes = this.state.requiredNotes;\n      notes.map(el => {\n        let c = Math.floor(amount / el);\n        amount = amount - el * Math.floor(amount / el);\n        requiredNotes = _objectSpread({}, requiredNotes, {\n          [el]: c\n        });\n        return true;\n      });\n      this.setState({\n        requiredNotes\n      });\n    };\n\n    this.renderNotes = () => {\n      return Object.entries(this.state.requiredNotes).reverse().map((el, i) => {\n        return React.createElement(\"div\", {\n          role: \"listitem\",\n          key: i,\n          className: \"item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \" \", el[0], \" \"), \" rs. notes will be \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \" \", el[1], \" \"));\n      });\n    };\n\n    this.totalNotes = () => {\n      return this.state.requiredNotes && Object.entries(this.state.requiredNotes).reduce((a, num) => {\n        return a + num[1];\n      }, 0);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"welcome to atm\")), React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui two column very relaxed grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Enter Amount\"), React.createElement(\"input\", {\n      className: \"\".concat(this.state.class ? 'custom-input' : ''),\n      type: \"text\",\n      name: \"amount\",\n      onChange: this.handleChange,\n      value: this.state.amount,\n      placeholder: \"Enter Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"ui button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      role: \"list\",\n      className: \"ui list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.renderNotes()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Total numbers of Notes : \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.totalNotes()))))), React.createElement(\"div\", {\n      className: \"ui vertical divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"and\")));\n  }\n\n}","map":{"version":3,"sources":["/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/atm-app/src/containers/App.jsx"],"names":["React","Component","App","state","amount","class","requiredNotes","notes","handleChange","e","regexp1","RegExp","test","target","value","setState","name","calNotes","map","el","c","Math","floor","renderNotes","Object","entries","reverse","i","totalNotes","reduce","a","num","handleSubmit","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport class App extends Component {\n    state={ \n        amount: '',\n        class: false,\n        requiredNotes: {2000: 0,500: 0,200: 0,100: 0,50: 0,20: 0,10: 0,5: 0,2: 0,1: 0},\n        notes: [2000,500,200,100,50,20,10,5,2,1],\n    }\n    handleChange = ( e ) => {\n        var regexp1=new RegExp(\"[^0-9]\");\n        if(regexp1.test(e.target.value))\n        {\n        this.setState({class:true})\n        return false;\n        }\n        this.setState({\n            [e.target.name] : e.target.value \n        },()=> { this.calNotes() });\n    }\n    calNotes = () => {\n        let amount = this.state.amount;\n        const notes = this.state.notes;\n        let requiredNotes = this.state.requiredNotes;\n        notes.map( ( el ) => {\n            let c = Math.floor(amount / el);\n            amount = amount - el * Math.floor(amount / el);\n            requiredNotes = {...requiredNotes,[el]: c }\n            return true;\n        });\n        this.setState({ requiredNotes })\n       \n    }\n    renderNotes = () => {\n        return Object.entries(this.state.requiredNotes).reverse().map((el ,i ) => {\n            return (\n                    <div role=\"listitem\" key={ i } className=\"item\">\n                        <strong> { el[0] } </strong> rs. notes will be <strong> { el[1] } </strong>\n                    </div>\n            );\n        })\n    }\n    totalNotes = () => {\n        return this.state.requiredNotes && Object.entries(this.state.requiredNotes).reduce( ( a,num ) => {\n             return  a + num[1];\n        }, 0);\n    }\n    handleSubmit = ( e ) => {\n        e.preventDefault();\n    }\n    render() {\n        return (\n            <div className='ui container'>\n                <div className='custom-div'>\n                    <h1 className='ui header'> \n                        welcome to atm \n                    </h1>\n                </div>\n                      \n                <div className=\"ui segment\">\n                    <div className=\"ui two column very relaxed grid\">\n                    <div className=\"column\">\n                        <form className=\"ui form\" onSubmit={ this.handleSubmit }>\n                            <div className=\"field\">\n                            <label>Enter Amount</label>\n                            <input className={`${ this.state.class ? 'custom-input': ''}`} type=\"text\" name=\"amount\" onChange={ this.handleChange } value={ this.state.amount } placeholder=\"Enter Amount\" />\n                            </div>\n                            <button className=\"ui button\" type=\"submit\">Submit</button>\n                        </form>\n                    </div>\n                    <div className=\"column\">\n                        <div role=\"list\" className=\"ui list\">\n                            { this.renderNotes() }\n                        </div>\n                        <div>\n                            <h2>\n                                Total numbers of Notes : <strong>{ this.totalNotes() }</strong>\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"ui vertical divider\">\n                and\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}