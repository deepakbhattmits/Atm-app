{"ast":null,"code":"import _objectSpread from \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/atm-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/atm-app/src/containers/App.jsx\";\nimport React, { Component } from 'react';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount: '',\n      requiredNotes: {},\n      notes: [2000, 500, 200, 100, 50, 20, 10, 5, 2, 1]\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }, () => {\n        this.calNotes();\n      });\n    };\n\n    this.calNotes = () => {\n      let amount = this.state.amount;\n      const notes = this.state.notes;\n      let requiredNotes = {};\n      console.log(notes, amount);\n      notes.map(el => {\n        let rem = amount % el;\n        console.log(rem, '- note : ', el, ' - ', Math.floor(amount / el));\n        amount = amount - el * Math.floor(amount / el);\n        requiredNotes = _objectSpread({}, this.state.requiredNotes, {\n          [el]: Math.floor(amount / el)\n        });\n        return true;\n      });\n      console.log('TEST : ', requiredNotes);\n      this.setState({\n        requiredNotes\n      });\n    };\n\n    this.renderNotes = () => {\n      console.log('TEST : ', this.state.requiredNotes); // return this.state.requiredNotes && this.state.requiredNotes.map((el ,i ) => {\n      //     return (\n      //             <div role=\"listitem\" key={ i } className=\"item\">{el} rs. notes will be </div>\n      //     );\n      // })\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"welcome to atm\")), React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui two column very relaxed grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Enter Amount\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"amount\",\n      onChange: this.handleChange,\n      value: this.state.amount,\n      placeholder: \"Enter Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"ui button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      role: \"list\",\n      className: \"ui list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.renderNotes()))), React.createElement(\"div\", {\n      className: \"ui vertical divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"and\")));\n  }\n\n}","map":{"version":3,"sources":["/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/atm-app/src/containers/App.jsx"],"names":["React","Component","App","state","amount","requiredNotes","notes","handleChange","e","setState","target","name","value","calNotes","console","log","map","el","rem","Math","floor","renderNotes","handleSubmit","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport class App extends Component {\n    state={ \n        amount: '',\n        requiredNotes: {},\n        notes: [2000,500,200,100,50,20,10,5,2,1],\n    }\n    handleChange = ( e ) => {\n        this.setState({\n            [e.target.name] : e.target.value \n        },()=> { this.calNotes() });\n    }\n    calNotes = () => {\n        let amount = this.state.amount;\n        const notes = this.state.notes;\n        let requiredNotes = {};\n        console.log(notes, amount);\n        notes.map((el) => {\n            let rem = amount % el;\n            console.log(rem, '- note : ', el, ' - ', Math.floor(amount / el) );\n            amount = amount - el * Math.floor(amount / el);\n            requiredNotes = {...this.state.requiredNotes,[el]: Math.floor(amount / el) }\n            return true;\n        });\n        console.log('TEST : ',requiredNotes);\n        this.setState({ requiredNotes })\n\n       \n    }\n    renderNotes = () => {\n        console.log('TEST : ',this.state.requiredNotes);\n        // return this.state.requiredNotes && this.state.requiredNotes.map((el ,i ) => {\n        //     return (\n        //             <div role=\"listitem\" key={ i } className=\"item\">{el} rs. notes will be </div>\n        //     );\n        // })\n    }\n    handleSubmit = ( e ) => {\n        e.preventDefault();\n    }\n    render() {\n        return (\n            <div className='ui container'>\n                <div className='custom-div'>\n                    <h1 className='ui header'> \n                        welcome to atm \n                    </h1>\n                </div>\n                      \n                <div className=\"ui segment\">\n                    <div className=\"ui two column very relaxed grid\">\n                    <div className=\"column\">\n                        <form className=\"ui form\" onSubmit={ this.handleSubmit }>\n                            <div className=\"field\">\n                            <label>Enter Amount</label>\n                            <input type=\"text\" name=\"amount\" onChange={ this.handleChange } value={ this.state.amount } placeholder=\"Enter Amount\" />\n                            </div>\n                            <button className=\"ui button\" type=\"submit\">Submit</button>\n                        </form>\n                    </div>\n                    <div className=\"column\">\n                        <div role=\"list\" className=\"ui list\">\n                            { this.renderNotes() }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"ui vertical divider\">\n                and\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}